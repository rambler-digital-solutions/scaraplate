
strategy: SetupCfgMerge

testcases:
  - name: non_existing_target
    template: |
      [metadata]
      # Project name
      version =
      name=foo
    target: null
    # Comments are removed, keys are sorted
    out: |
      [metadata]
      name = foo
      version =
    config: &default_config
      merge_requirements:
      - sections: ^options$
        keys: ^install_requires$
      - sections: ^options\.extras_require$
        keys: ^develop$
      preserve_keys:
      - sections: ^tool:pytest$
        keys: ^testpaths$
      - sections: ^build$
        keys: ^executable$
      preserve_sections:
      - sections: ^freebsd$
      - sections: ^infra\.dependencies_updater$
      - sections: ^mypy-
      - sections: ^options\.data_files$
      - sections: ^options\.entry_points$
      - sections: ^options\.extras_require$

  - name: extraneous_sections
    template: |
      [metadata]
      name=foo
      version = 1
      [isort]
      atomic = true
    target: |
      [aliases]
      test = pytest
      [metadata]
      name=foo
      url = http://
    out: |
      [isort]
      atomic = true

      [metadata]
      name = foo
      version = 1
    config:
      <<: *default_config

  - name: mypy_sections
    template: |
      [mypy]
      a = 1
      [mypy-aiohttp.*]
      ignore_missing_imports = True
      [mypy-pytest.*]
      ignore_missing_imports = True
    target: |
      [mypy]
      a = 2
      b = 1
      [mypy-packaging.*]
      ignore_missing_imports = True
      [mypy-pytest.*]
      ignore_missing_imports = True
      [aliases]
      test = pytest
    out: |
      [mypy]
      a = 1

      [mypy-aiohttp.*]
      ignore_missing_imports = True

      [mypy-packaging.*]
      ignore_missing_imports = True

      [mypy-pytest.*]
      ignore_missing_imports = True
    config:
      <<: *default_config

  - name: requirements_nonexisting_target
    template: |
      [options]
      install_requires =
        Black
        isort==4.3

      [options.extras_require]
      develop =
        pytest
    target: null
    out: |
      [options]
      install_requires =
          Black
          isort==4.3

      [options.extras_require]
      develop =
          pytest
    config:
      <<: *default_config

  - name: requirements_update
    template: |
      [options]
      install_requires =
        Black
        isort==4.3

      [options.extras_require]
      develop =
        pytest
    target: |
      [options]
      install_requires =
        aiohttp==4.3
        isorT==1.3

      [options.extras_require]
      develop =
        flask
      fast =
        librabbitmq
    out: |
      [options]
      install_requires =
          aiohttp==4.3
          Black
          isorT==1.3

      [options.extras_require]
      develop =
          flask
          pytest
      fast =
          librabbitmq
    config:
      <<: *default_config

  - name: pytest_testpaths
    template: |
      [tool:pytest]
      addopts =
          --verbose
          --showlocals
    target: |
      [tool:pytest]
      addopts =
          --verbose
          --showlocals
          --tb=short
      testpaths =
          tests/unit/
          tests/integration/
    out: |
      [tool:pytest]
      addopts =
          --verbose
          --showlocals
      testpaths =
          tests/unit/
          tests/integration/
    config:
      <<: *default_config

  - name: build_executable
    template: |
      [metadata]
      name=foo
    target: |
      [build]
      executable = /usr/bin/env python3.6
    out: |
      [build]
      executable = /usr/bin/env python3.6

      [metadata]
      name = foo
    config:
      <<: *default_config

  - name: freebsd
    template: |
      [metadata]
      name=foo
    target: |
      [build]
      executable = /usr/bin/env python3.6

      [freebsd]
      user = nobody
      group = nobody
    out: |
      [build]
      executable = /usr/bin/env python3.6

      [freebsd]
      group = nobody
      user = nobody

      [metadata]
      name = foo
    config:
      <<: *default_config

  - name: infra.dependencies_updater
    template: |
      [metadata]
      name=foo
    target: |
      [build]
      executable = /usr/bin/env python3.6

      [infra.dependencies_updater]
      pinned =
        xgboost==0.6
    out: |
      [build]
      executable = /usr/bin/env python3.6

      [infra.dependencies_updater]
      pinned =
          xgboost==0.6

      [metadata]
      name = foo
    config:
      <<: *default_config

  - name: requirements_update_multiple_extras
    template: |
      [options]
      install_requires =
        isort==4.3

      [options.extras_require]
      nondev =
        django
      dev-a =
        pytest
      dev-b =
        flake8
    target: |
      [options]
      install_requires =
        aiohttp

      [options.extras_require]
      nondevtarget =
        django
      dev-c =
        flask
      dev-b =
        isort
    out: |
      [options]
      install_requires =
          aiohttp
          isort==4.3

      [options.extras_require]
      dev-a =
          pytest
      dev-b =
          flake8
          isort
      dev-c =
          flask
      nondev =
          django
    config:
      merge_requirements:
      - sections: ^options$
        keys: ^install_requires$
      - sections: ^options\.extras_require$
        keys: ^dev-
      preserve_keys: []
      preserve_sections: []

  - name: requirements_update_with_mixed_newlines
    template: "\
      [options]\n\
      install_requires =\n\
      \  Black\n\
      \  isort==4.3\n"
    target: "\
      [options]\r\n\
      install_requires =\r\n\
      \  aiohttp==4.3\r\n\
      \  isorT==1.3\r\n"
    out: "\
      [options]\r\n\
      install_requires =\r\n\
      \    aiohttp==4.3\r\n\
      \    Black\r\n\
      \    isorT==1.3\r\n"
    config:
      <<: *default_config
